; Autor:Victor Quesada Rodriguez

; Código principal
LDV 1                      ; Cargar la hilera
BST 0 0                    ; Almacenar la hilera en la posición 0
LDF $1                     ; Cargar la función que invierte la hilera
BST 0 1                    ; Almacenar la dirección de la hilera en la posición 1

LDV 0                      ; Inicializar índice de inicio en 0
BST 1 2                    ; Almacenar índice de inicio en la posición 2

; Obtener longitud de la hilera
LDF $2                     ; Cargar la función que calcula el largo
APP                        ; Ejecutar la función para obtener la longitud
LDV 1                      ; Cargar la longitud
SUB                        ; Calcular el índice final (longitud - 1)
BST 1 3                    ; Almacenar índice final en la posición 3

; Comienza el bucle de inversión
BLD 1 2                    ; Cargar índice de inicio
BLD 1 3                    ; Cargar índice final
LT                         ; Comparar si inicio < final
BF +16                     ; Si no es menor, saltar a salida

; Intercambiar los caracteres en las posiciones de inicio y final
BLD 1 0                    ; Cargar la hilera
BLD 1 2                    ; Cargar índice de inicio
LTK                        ; Obtener el carácter en la posición de inicio

BLD 1 0                    ; Cargar la hilera
BLD 1 3                    ; Cargar índice final
LTK                        ; Obtener el carácter en la posición final

; Almacenar caracteres intercambiados
BLD 1 0                    ; Cargar la hilera
BLD 1 2                    ; Cargar índice de inicio
BST 1 4                    ; Almacenar carácter de inicio en la posición temporal 4

BLD 1 0                    ; Cargar la hilera
BLD 1 3                    ; Cargar índice final
BST 1 2                    ; Almacenar carácter final en la posición de inicio

BLD 1 0                    ; Cargar la hilera
BLD 1 4                    ; Cargar carácter temporal (inicio)
BST 1 3                    ; Almacenar carácter temporal en la posición final

; Incrementar el índice de inicio y decrementar el índice final
BLD 1 2                    ; Cargar índice de inicio
LDV 1                      ; Cargar 1
ADD                        ; inicio++
BST 1 2                    ; Guardar índice de inicio actualizado

BLD 1 3                    ; Cargar índice final
LDV 1                      ; Cargar 1
SUB                        ; final--
BST 1 3                    ; Guardar índice final actualizado

BR -14                     ; Repetir el bucle

; Fin del bucle, retornar la hilera invertida
BLD 1 0                    ; Cargar la hilera invertida
RET                        ; Retornar la hilera

; Funciones al final
$FUN $1                    ; Declaración de la función para invertir la hilera
LDF $2                     ; Cargar la función que invierte la hilera
RET                        ; Retornar
$END $1                    ; Fin de la función

$FUN $2                    ; Función que calcula el largo de la lista
BLD 1 0                    ; Cargar la lista
LNT                        ; Comprobar si está vacía
BT +8                      ; Saltar si está vacía

LDV 1                      ; Inicializar en 0
BST 2 0                    ; Almacenar longitud en posición 0

; Comienza el bucle
BLD 1 0                    ; Cargar lista
LDV 1                      ; Cargar longitud
ADD                        ; Incrementar longitud
BST 2 0                    ; Almacenar longitud

; Continuar al siguiente elemento
BLD 1 0                    ; Cargar lista
LDV 1                      ; Cargar longitud
LRK                        ; Obtener el k-ésimo elemento
BST 1 0                    ; Almacenar lista en posición 0

BR -6                      ; Repetir el bucle

; Fin del bucle
BLD 2 0                    ; Cargar longitud final
RET                        ; Retornar longitud
$END $2                    ; Fin de la función
HLT                        ; Terminar la ejecución
